//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyApi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class sarojwebappdbEntities : DbContext
    {
        public sarojwebappdbEntities()
            : base("name=sarojwebappdbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EmpDetail> EmpDetails { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Table> Tables { get; set; }
        public virtual DbSet<tbl2EmpDetails> tbl2EmpDetails { get; set; }
        public virtual DbSet<tblDemoProject> tblDemoProjects { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual int AddNew(string id, string name, string description, string dOB, string imagePath, string aid, string dvid, string url)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var aidParameter = aid != null ?
                new ObjectParameter("aid", aid) :
                new ObjectParameter("aid", typeof(string));
    
            var dvidParameter = dvid != null ?
                new ObjectParameter("dvid", dvid) :
                new ObjectParameter("dvid", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNew", idParameter, nameParameter, descriptionParameter, dOBParameter, imagePathParameter, aidParameter, dvidParameter, urlParameter);
        }
    
        public virtual int AddNewDemoproj(string id, string name, string description, string image, string url)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewDemoproj", idParameter, nameParameter, descriptionParameter, imageParameter, urlParameter);
        }
    
        public virtual int DeleteDemoprojById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDemoprojById", idParameter);
        }
    
        public virtual int DeleteEmpById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmpById", idParameter);
        }
    
        public virtual ObjectResult<GetDemoprojDetails_Result> GetDemoprojDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDemoprojDetails_Result>("GetDemoprojDetails");
        }
    
        public virtual ObjectResult<GetEmployees_Result> GetEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployees_Result>("GetEmployees");
        }
    
        public virtual int GetImageCount(string fileName, ObjectParameter imageCount)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetImageCount", fileNameParameter, imageCount);
        }
    
        public virtual ObjectResult<sp2GetAllEmpList_Result> sp2GetAllEmpList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp2GetAllEmpList_Result>("sp2GetAllEmpList");
        }
    
        public virtual int sp2UpdateEmployeeStatusById(Nullable<int> id, string location, string actionParam)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var actionParamParameter = actionParam != null ?
                new ObjectParameter("ActionParam", actionParam) :
                new ObjectParameter("ActionParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp2UpdateEmployeeStatusById", idParameter, locationParameter, actionParamParameter);
        }
    
        public virtual int UpdateEmpDetails(Nullable<int> id, string name, string description, string dOB, string imagePath, string aid, string dvid, string url)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var aidParameter = aid != null ?
                new ObjectParameter("aid", aid) :
                new ObjectParameter("aid", typeof(string));
    
            var dvidParameter = dvid != null ?
                new ObjectParameter("dvid", dvid) :
                new ObjectParameter("dvid", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpDetails", idParameter, nameParameter, descriptionParameter, dOBParameter, imagePathParameter, aidParameter, dvidParameter, urlParameter);
        }
    }
}
